
  Database:


    1. Eloquent ORM ( Object Relational Mapper )
       ( Mapping table with model class )
      
      Ex: 

        'User' Model -> 'users' table
        'Post' Model -> 'posts' table
      
      
	      user App\Models\User;
	      
	      $user = new User;
	      $user->name="ajay";
	      $user->save();
     


    2. QueryBuider:

       ( Illuminate\Support\Facade\DB )
   
	    Ex:
	   
	       DB::table('users')->insert([
	   
	          'name' => 'ajay', 
	        
	       ]);


       DB:table('users')->select('name','email')->get();   
       DB:table('users')->where('id',1)->update(['votes' => 1]);
       DB:table('users')->delete();
       DB:table('users')->truncate();
           
       DB:table('users')->get();
       DB:table('users')->where('name','ajay')->first();
       DB:table('users')->count();











-------------------------------------------------------------------------

  Database Migration: 


  1. Running Migrations: 
     php artisan migrate

  2. Generating Migrations:
     php artisan make:migration create_products_table


  3. php artisan migrate: status
  4. php artisan migrate --pretend
  5. php artisan migrate: fresh
  6. php artisan migrate: refresh	
  7. php artisan migrate: reset

  8. php artisan migrate: rollback
  9. php artisan migrate: rollback --setp=2





//Add Column : 
------------

php artisan make:migration add_column_name_to_products

Up:
      $table->string('name');

Down:
      $table->DropColumn('name');



//Rename Column :
---------------

php artisan make:migration rename_name_in_products_table  //Or --table=products
  
Up:
      $table->rename('name','fname');
Down:
      $table->renameColumn('fname','name');



//Drop Colunm:
--------------
       php artisan make:migration delete_email_in_products_table  //Or --table=products

Up:
      $table->dropColumn('name');
Down:
      $table->string('name');




----------------------------------------------------------------------


Eloquent Relationship:


1. One to One Relationship

Tables: users, contacts

        User has one contact
        Contact belongs to User
        
        

//In User.php Model


	public function contact(){
	   return $this->hasOne(Contact::class);
	}


//In Contact.php Model


	public function user(){
	   return $this->belongsTo(User::class);
	}



//In TestController.php

use App/Models/User;
use App/Models/Contact;


	public function index(){
	   $user = User::first();
	   return $user->all();
	}


--OR--

	public function index(){
	   $user = User::with('contact')->first();
	   return $user->all();
	}


--OR--

	public function index(){
	   $user = User::with('contact')->first();
	   return $user->contact;
	}


--OR--

	public function index(){
	   $user = User::with('contact')->first();
	   dd($user->toArray());
	}



--OR--

	public function index(){
	   $contact = Contact::with('user')->first();
	   dd($contact->toArray());
	}




//One To Many Relationship


  Table: Users, Posts
  
         User has many Posts
         A Post belongs to a user
         
         

//In User.php Model

	public function posts(){
	   return $this->hasMany(Post::class);
	}



//In Post.php Model

	public function user(){
	   return $this->belongsTo(User::class);
	}





//In TextController.php


	public function index(){
	   $user = User::find(1);
	   return $user->toArray();
	}
	

--OR--

	public function index(){
	   $user = User::with(['contact'])->find(1);
	   dd($user->toArray());
	}


--OR--

	public function index(){
	   $user = User::with(['contact','posts])->find(1);
	   dd($user->toArray());
	}


--OR--

	public function index(){
	   $post = Post::with('user')->first();
	   dd($post->toArray());
	}
	
	
--OR--

	public function index(){
	   $post = Post::with('user')->first();
	   dd($post->toArray());
	}
	
	
---------------------------------------------------------------------------------		
	

//Many to Many:


  Tables: posts, categories, category_post
          
          A Post belongs to Many Categories
          A Category belongs to many Posts
         
   
          
          
   //In Post.php Model

	public function user(){
	   return $this->belongsTo(User::class);
	}       

	public function categories(){
	   return $this->belongsToMany(Category::class);
	}       


   //In Category.php Model

	public function posts(){
	   return $this->belongsToMany(Post::class);
	}       

      


//In TextController.php


	public function index(){
	   $categories = Category::all();
	   $post = Post::with('categories')->first();
	   dd($post->toArray());
	}
	

--OR--


//In TextController.php


	public function index(){
	   $categories = Category::all();
	   $post = Post::with('categories')->first();
	   $post->$categories()->attach($categories);
	   
	   $post = Post::with('categories')->first();
	   dd($post->toArray());
	}
	

--OR--

	public function index(){
	   $categories = Category::all();
	   $post = Post::with('categories')->first();
	   $post->$categories()->sync([1,2]);
	   
	   $post = Post::with('categories')->first();
	   dd($post->toArray());
	}
	

--OR--

	public function index(){
	   $categories = Category::all();
	   $post = Post::with('categories')->first();
	   $post->$categories()->detatch([1,2]);
	   
	   $post = Post::with('categories')->first();
	   dd($post->toArray());
	}
	

--OR--


-------------------------------------------------------------------------



