Factory:


<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;
use Illuminate\Support\Str;


class UserFactory extends Factory
{

    public function definition(): array
    {
        return [
            'name' => fake()->name(),
            'email' => fake()->unique()->safeEmail(),
            'email_verified_at' => now(),
            'password' => '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', // password
            'remember_token' => Str::random(10),
        ];
    }

    public function unverified(): static
    {
        return $this->state(fn (array $attributes) => [
            'email_verified_at' => null,
        ]);
    }
}




\App\Models\Product::factory(5)->create();


------------------------------------------------------------------------












-------------------------------------------------------------------------




https://github.com/fzaninotto/Faker

 fake()->unique()->safeEmail()
 fake()->phoneNumber
 fake()fake()->unique()->email
 fake()->name
 fake()->firstNameFemale 
 fake()->unique()->email
 fake()->company
 fake()->text;
 fake()->address;
 fake()->bankAccountNumber
 fake()->vat(false);
 fake()->vat;
 fake()->region;
 fake()->ico;

 fake()->mobileNumber;          // "021 123 4567"
 fake()->tollFreeNumber;       // "0800 123 456"

 // Area Code
 fake()->areaCode; // "03"


 fake()->idNumber;            // ID number
 fake()->nationalIdNumber    // Citizen ID number
 fake()->foreignerIdNumber  // Foreigner ID number
 fake()->companyIdNumber   // Company ID number


----------------------------------------------------------

























---------------------------------------------------------------

  Database Migration: 


  1. Running Migrations: 
     php artisan migrate

  2. Generating Migrations:
     php artisan make:migration create_products_table


  3. php artisan migrate: status
  4. php artisan migrate --pretend
  5. php artisan migrate: fresh
  6. php artisan migrate: refresh	
  7. php artisan migrate: reset

  8. php artisan migrate: rollback
  9. php artisan migrate: rollback --setp=2





//Add Column : 
------------

php artisan make:migration add_column_name_to_products

Up:
      $table->string('name');

Down:
      $table->DropColumn('name');



//Rename Column :
---------------

php artisan make:migration rename_name_in_products_table  //Or --table=products
  
Up:
      $table->rename('name','fname');
Down:
      $table->renameColumn('fname','name');



//Drop Colunm:
--------------
       php artisan make:migration delete_email_in_products_table  //Or --table=products

Up:
      $table->dropColumn('name');
Down:
      $table->string('name');






